// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

#ifndef PROTOBUF_meta_2eproto__INCLUDED
#define PROTOBUF_meta_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_meta_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSetupTaskRequestImpl();
void InitDefaultsSetupTaskRequest();
void InitDefaultsSetupTaskResponseImpl();
void InitDefaultsSetupTaskResponse();
void InitDefaultsRemoveTaskRequestImpl();
void InitDefaultsRemoveTaskRequest();
void InitDefaultsRemoveTaskResponseImpl();
void InitDefaultsRemoveTaskResponse();
inline void InitDefaults() {
  InitDefaultsSetupTaskRequest();
  InitDefaultsSetupTaskResponse();
  InitDefaultsRemoveTaskRequest();
  InitDefaultsRemoveTaskResponse();
}
}  // namespace protobuf_meta_2eproto
class RemoveTaskRequest;
class RemoveTaskRequestDefaultTypeInternal;
extern RemoveTaskRequestDefaultTypeInternal _RemoveTaskRequest_default_instance_;
class RemoveTaskResponse;
class RemoveTaskResponseDefaultTypeInternal;
extern RemoveTaskResponseDefaultTypeInternal _RemoveTaskResponse_default_instance_;
class SetupTaskRequest;
class SetupTaskRequestDefaultTypeInternal;
extern SetupTaskRequestDefaultTypeInternal _SetupTaskRequest_default_instance_;
class SetupTaskResponse;
class SetupTaskResponseDefaultTypeInternal;
extern SetupTaskResponseDefaultTypeInternal _SetupTaskResponse_default_instance_;

// ===================================================================

class SetupTaskRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetupTaskRequest) */ {
 public:
  SetupTaskRequest();
  virtual ~SetupTaskRequest();

  SetupTaskRequest(const SetupTaskRequest& from);

  inline SetupTaskRequest& operator=(const SetupTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetupTaskRequest(SetupTaskRequest&& from) noexcept
    : SetupTaskRequest() {
    *this = ::std::move(from);
  }

  inline SetupTaskRequest& operator=(SetupTaskRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetupTaskRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupTaskRequest* internal_default_instance() {
    return reinterpret_cast<const SetupTaskRequest*>(
               &_SetupTaskRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SetupTaskRequest* other);
  friend void swap(SetupTaskRequest& a, SetupTaskRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetupTaskRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetupTaskRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetupTaskRequest& from);
  void MergeFrom(const SetupTaskRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetupTaskRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string TaskID = 1;
  bool has_taskid() const;
  void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  const ::std::string& taskid() const;
  void set_taskid(const ::std::string& value);
  #if LANG_CXX11
  void set_taskid(::std::string&& value);
  #endif
  void set_taskid(const char* value);
  void set_taskid(const char* value, size_t size);
  ::std::string* mutable_taskid();
  ::std::string* release_taskid();
  void set_allocated_taskid(::std::string* taskid);

  // required string HostOsType = 2;
  bool has_hostostype() const;
  void clear_hostostype();
  static const int kHostOsTypeFieldNumber = 2;
  const ::std::string& hostostype() const;
  void set_hostostype(const ::std::string& value);
  #if LANG_CXX11
  void set_hostostype(::std::string&& value);
  #endif
  void set_hostostype(const char* value);
  void set_hostostype(const char* value, size_t size);
  ::std::string* mutable_hostostype();
  ::std::string* release_hostostype();
  void set_allocated_hostostype(::std::string* hostostype);

  // required string HostOsName = 3;
  bool has_hostosname() const;
  void clear_hostosname();
  static const int kHostOsNameFieldNumber = 3;
  const ::std::string& hostosname() const;
  void set_hostosname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostosname(::std::string&& value);
  #endif
  void set_hostosname(const char* value);
  void set_hostosname(const char* value, size_t size);
  ::std::string* mutable_hostosname();
  ::std::string* release_hostosname();
  void set_allocated_hostosname(::std::string* hostosname);

  // @@protoc_insertion_point(class_scope:SetupTaskRequest)
 private:
  void set_has_taskid();
  void clear_has_taskid();
  void set_has_hostostype();
  void clear_has_hostostype();
  void set_has_hostosname();
  void clear_has_hostosname();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr taskid_;
  ::google::protobuf::internal::ArenaStringPtr hostostype_;
  ::google::protobuf::internal::ArenaStringPtr hostosname_;
  friend struct ::protobuf_meta_2eproto::TableStruct;
  friend void ::protobuf_meta_2eproto::InitDefaultsSetupTaskRequestImpl();
};
// -------------------------------------------------------------------

class SetupTaskResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetupTaskResponse) */ {
 public:
  SetupTaskResponse();
  virtual ~SetupTaskResponse();

  SetupTaskResponse(const SetupTaskResponse& from);

  inline SetupTaskResponse& operator=(const SetupTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetupTaskResponse(SetupTaskResponse&& from) noexcept
    : SetupTaskResponse() {
    *this = ::std::move(from);
  }

  inline SetupTaskResponse& operator=(SetupTaskResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetupTaskResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupTaskResponse* internal_default_instance() {
    return reinterpret_cast<const SetupTaskResponse*>(
               &_SetupTaskResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SetupTaskResponse* other);
  friend void swap(SetupTaskResponse& a, SetupTaskResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetupTaskResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SetupTaskResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetupTaskResponse& from);
  void MergeFrom(const SetupTaskResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetupTaskResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ErrMsg = 2;
  bool has_errmsg() const;
  void clear_errmsg();
  static const int kErrMsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // required int32 ErrCode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetupTaskResponse)
 private:
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_errmsg();
  void clear_has_errmsg();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int32 errcode_;
  friend struct ::protobuf_meta_2eproto::TableStruct;
  friend void ::protobuf_meta_2eproto::InitDefaultsSetupTaskResponseImpl();
};
// -------------------------------------------------------------------

class RemoveTaskRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoveTaskRequest) */ {
 public:
  RemoveTaskRequest();
  virtual ~RemoveTaskRequest();

  RemoveTaskRequest(const RemoveTaskRequest& from);

  inline RemoveTaskRequest& operator=(const RemoveTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveTaskRequest(RemoveTaskRequest&& from) noexcept
    : RemoveTaskRequest() {
    *this = ::std::move(from);
  }

  inline RemoveTaskRequest& operator=(RemoveTaskRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveTaskRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveTaskRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveTaskRequest*>(
               &_RemoveTaskRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RemoveTaskRequest* other);
  friend void swap(RemoveTaskRequest& a, RemoveTaskRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveTaskRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveTaskRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveTaskRequest& from);
  void MergeFrom(const RemoveTaskRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveTaskRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string TaskID = 1;
  bool has_taskid() const;
  void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  const ::std::string& taskid() const;
  void set_taskid(const ::std::string& value);
  #if LANG_CXX11
  void set_taskid(::std::string&& value);
  #endif
  void set_taskid(const char* value);
  void set_taskid(const char* value, size_t size);
  ::std::string* mutable_taskid();
  ::std::string* release_taskid();
  void set_allocated_taskid(::std::string* taskid);

  // required string UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required string Passwd = 3;
  bool has_passwd() const;
  void clear_passwd();
  static const int kPasswdFieldNumber = 3;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  #if LANG_CXX11
  void set_passwd(::std::string&& value);
  #endif
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // @@protoc_insertion_point(class_scope:RemoveTaskRequest)
 private:
  void set_has_taskid();
  void clear_has_taskid();
  void set_has_username();
  void clear_has_username();
  void set_has_passwd();
  void clear_has_passwd();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr taskid_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  friend struct ::protobuf_meta_2eproto::TableStruct;
  friend void ::protobuf_meta_2eproto::InitDefaultsRemoveTaskRequestImpl();
};
// -------------------------------------------------------------------

class RemoveTaskResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoveTaskResponse) */ {
 public:
  RemoveTaskResponse();
  virtual ~RemoveTaskResponse();

  RemoveTaskResponse(const RemoveTaskResponse& from);

  inline RemoveTaskResponse& operator=(const RemoveTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveTaskResponse(RemoveTaskResponse&& from) noexcept
    : RemoveTaskResponse() {
    *this = ::std::move(from);
  }

  inline RemoveTaskResponse& operator=(RemoveTaskResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveTaskResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveTaskResponse* internal_default_instance() {
    return reinterpret_cast<const RemoveTaskResponse*>(
               &_RemoveTaskResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RemoveTaskResponse* other);
  friend void swap(RemoveTaskResponse& a, RemoveTaskResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveTaskResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveTaskResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveTaskResponse& from);
  void MergeFrom(const RemoveTaskResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveTaskResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ErrMsg = 2;
  bool has_errmsg() const;
  void clear_errmsg();
  static const int kErrMsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // required int32 ErrCode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RemoveTaskResponse)
 private:
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_errmsg();
  void clear_has_errmsg();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int32 errcode_;
  friend struct ::protobuf_meta_2eproto::TableStruct;
  friend void ::protobuf_meta_2eproto::InitDefaultsRemoveTaskResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SetupTaskRequest

// required string TaskID = 1;
inline bool SetupTaskRequest::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetupTaskRequest::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetupTaskRequest::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetupTaskRequest::clear_taskid() {
  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_taskid();
}
inline const ::std::string& SetupTaskRequest::taskid() const {
  // @@protoc_insertion_point(field_get:SetupTaskRequest.TaskID)
  return taskid_.GetNoArena();
}
inline void SetupTaskRequest::set_taskid(const ::std::string& value) {
  set_has_taskid();
  taskid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetupTaskRequest.TaskID)
}
#if LANG_CXX11
inline void SetupTaskRequest::set_taskid(::std::string&& value) {
  set_has_taskid();
  taskid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetupTaskRequest.TaskID)
}
#endif
inline void SetupTaskRequest::set_taskid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_taskid();
  taskid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetupTaskRequest.TaskID)
}
inline void SetupTaskRequest::set_taskid(const char* value, size_t size) {
  set_has_taskid();
  taskid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetupTaskRequest.TaskID)
}
inline ::std::string* SetupTaskRequest::mutable_taskid() {
  set_has_taskid();
  // @@protoc_insertion_point(field_mutable:SetupTaskRequest.TaskID)
  return taskid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetupTaskRequest::release_taskid() {
  // @@protoc_insertion_point(field_release:SetupTaskRequest.TaskID)
  clear_has_taskid();
  return taskid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetupTaskRequest::set_allocated_taskid(::std::string* taskid) {
  if (taskid != NULL) {
    set_has_taskid();
  } else {
    clear_has_taskid();
  }
  taskid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskid);
  // @@protoc_insertion_point(field_set_allocated:SetupTaskRequest.TaskID)
}

// required string HostOsType = 2;
inline bool SetupTaskRequest::has_hostostype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetupTaskRequest::set_has_hostostype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetupTaskRequest::clear_has_hostostype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetupTaskRequest::clear_hostostype() {
  hostostype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hostostype();
}
inline const ::std::string& SetupTaskRequest::hostostype() const {
  // @@protoc_insertion_point(field_get:SetupTaskRequest.HostOsType)
  return hostostype_.GetNoArena();
}
inline void SetupTaskRequest::set_hostostype(const ::std::string& value) {
  set_has_hostostype();
  hostostype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetupTaskRequest.HostOsType)
}
#if LANG_CXX11
inline void SetupTaskRequest::set_hostostype(::std::string&& value) {
  set_has_hostostype();
  hostostype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetupTaskRequest.HostOsType)
}
#endif
inline void SetupTaskRequest::set_hostostype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hostostype();
  hostostype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetupTaskRequest.HostOsType)
}
inline void SetupTaskRequest::set_hostostype(const char* value, size_t size) {
  set_has_hostostype();
  hostostype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetupTaskRequest.HostOsType)
}
inline ::std::string* SetupTaskRequest::mutable_hostostype() {
  set_has_hostostype();
  // @@protoc_insertion_point(field_mutable:SetupTaskRequest.HostOsType)
  return hostostype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetupTaskRequest::release_hostostype() {
  // @@protoc_insertion_point(field_release:SetupTaskRequest.HostOsType)
  clear_has_hostostype();
  return hostostype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetupTaskRequest::set_allocated_hostostype(::std::string* hostostype) {
  if (hostostype != NULL) {
    set_has_hostostype();
  } else {
    clear_has_hostostype();
  }
  hostostype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostostype);
  // @@protoc_insertion_point(field_set_allocated:SetupTaskRequest.HostOsType)
}

// required string HostOsName = 3;
inline bool SetupTaskRequest::has_hostosname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetupTaskRequest::set_has_hostosname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetupTaskRequest::clear_has_hostosname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetupTaskRequest::clear_hostosname() {
  hostosname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hostosname();
}
inline const ::std::string& SetupTaskRequest::hostosname() const {
  // @@protoc_insertion_point(field_get:SetupTaskRequest.HostOsName)
  return hostosname_.GetNoArena();
}
inline void SetupTaskRequest::set_hostosname(const ::std::string& value) {
  set_has_hostosname();
  hostosname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetupTaskRequest.HostOsName)
}
#if LANG_CXX11
inline void SetupTaskRequest::set_hostosname(::std::string&& value) {
  set_has_hostosname();
  hostosname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetupTaskRequest.HostOsName)
}
#endif
inline void SetupTaskRequest::set_hostosname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hostosname();
  hostosname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetupTaskRequest.HostOsName)
}
inline void SetupTaskRequest::set_hostosname(const char* value, size_t size) {
  set_has_hostosname();
  hostosname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetupTaskRequest.HostOsName)
}
inline ::std::string* SetupTaskRequest::mutable_hostosname() {
  set_has_hostosname();
  // @@protoc_insertion_point(field_mutable:SetupTaskRequest.HostOsName)
  return hostosname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetupTaskRequest::release_hostosname() {
  // @@protoc_insertion_point(field_release:SetupTaskRequest.HostOsName)
  clear_has_hostosname();
  return hostosname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetupTaskRequest::set_allocated_hostosname(::std::string* hostosname) {
  if (hostosname != NULL) {
    set_has_hostosname();
  } else {
    clear_has_hostosname();
  }
  hostosname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostosname);
  // @@protoc_insertion_point(field_set_allocated:SetupTaskRequest.HostOsName)
}

// -------------------------------------------------------------------

// SetupTaskResponse

// required int32 ErrCode = 1;
inline bool SetupTaskResponse::has_errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetupTaskResponse::set_has_errcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetupTaskResponse::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetupTaskResponse::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 SetupTaskResponse::errcode() const {
  // @@protoc_insertion_point(field_get:SetupTaskResponse.ErrCode)
  return errcode_;
}
inline void SetupTaskResponse::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:SetupTaskResponse.ErrCode)
}

// required string ErrMsg = 2;
inline bool SetupTaskResponse::has_errmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetupTaskResponse::set_has_errmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetupTaskResponse::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetupTaskResponse::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errmsg();
}
inline const ::std::string& SetupTaskResponse::errmsg() const {
  // @@protoc_insertion_point(field_get:SetupTaskResponse.ErrMsg)
  return errmsg_.GetNoArena();
}
inline void SetupTaskResponse::set_errmsg(const ::std::string& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetupTaskResponse.ErrMsg)
}
#if LANG_CXX11
inline void SetupTaskResponse::set_errmsg(::std::string&& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetupTaskResponse.ErrMsg)
}
#endif
inline void SetupTaskResponse::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetupTaskResponse.ErrMsg)
}
inline void SetupTaskResponse::set_errmsg(const char* value, size_t size) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetupTaskResponse.ErrMsg)
}
inline ::std::string* SetupTaskResponse::mutable_errmsg() {
  set_has_errmsg();
  // @@protoc_insertion_point(field_mutable:SetupTaskResponse.ErrMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetupTaskResponse::release_errmsg() {
  // @@protoc_insertion_point(field_release:SetupTaskResponse.ErrMsg)
  clear_has_errmsg();
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetupTaskResponse::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    set_has_errmsg();
  } else {
    clear_has_errmsg();
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:SetupTaskResponse.ErrMsg)
}

// -------------------------------------------------------------------

// RemoveTaskRequest

// required string TaskID = 1;
inline bool RemoveTaskRequest::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveTaskRequest::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveTaskRequest::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveTaskRequest::clear_taskid() {
  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_taskid();
}
inline const ::std::string& RemoveTaskRequest::taskid() const {
  // @@protoc_insertion_point(field_get:RemoveTaskRequest.TaskID)
  return taskid_.GetNoArena();
}
inline void RemoveTaskRequest::set_taskid(const ::std::string& value) {
  set_has_taskid();
  taskid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RemoveTaskRequest.TaskID)
}
#if LANG_CXX11
inline void RemoveTaskRequest::set_taskid(::std::string&& value) {
  set_has_taskid();
  taskid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RemoveTaskRequest.TaskID)
}
#endif
inline void RemoveTaskRequest::set_taskid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_taskid();
  taskid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RemoveTaskRequest.TaskID)
}
inline void RemoveTaskRequest::set_taskid(const char* value, size_t size) {
  set_has_taskid();
  taskid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RemoveTaskRequest.TaskID)
}
inline ::std::string* RemoveTaskRequest::mutable_taskid() {
  set_has_taskid();
  // @@protoc_insertion_point(field_mutable:RemoveTaskRequest.TaskID)
  return taskid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveTaskRequest::release_taskid() {
  // @@protoc_insertion_point(field_release:RemoveTaskRequest.TaskID)
  clear_has_taskid();
  return taskid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveTaskRequest::set_allocated_taskid(::std::string* taskid) {
  if (taskid != NULL) {
    set_has_taskid();
  } else {
    clear_has_taskid();
  }
  taskid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskid);
  // @@protoc_insertion_point(field_set_allocated:RemoveTaskRequest.TaskID)
}

// required string UserName = 2;
inline bool RemoveTaskRequest::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveTaskRequest::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveTaskRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveTaskRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& RemoveTaskRequest::username() const {
  // @@protoc_insertion_point(field_get:RemoveTaskRequest.UserName)
  return username_.GetNoArena();
}
inline void RemoveTaskRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RemoveTaskRequest.UserName)
}
#if LANG_CXX11
inline void RemoveTaskRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RemoveTaskRequest.UserName)
}
#endif
inline void RemoveTaskRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RemoveTaskRequest.UserName)
}
inline void RemoveTaskRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RemoveTaskRequest.UserName)
}
inline ::std::string* RemoveTaskRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:RemoveTaskRequest.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveTaskRequest::release_username() {
  // @@protoc_insertion_point(field_release:RemoveTaskRequest.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveTaskRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:RemoveTaskRequest.UserName)
}

// required string Passwd = 3;
inline bool RemoveTaskRequest::has_passwd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemoveTaskRequest::set_has_passwd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemoveTaskRequest::clear_has_passwd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemoveTaskRequest::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_passwd();
}
inline const ::std::string& RemoveTaskRequest::passwd() const {
  // @@protoc_insertion_point(field_get:RemoveTaskRequest.Passwd)
  return passwd_.GetNoArena();
}
inline void RemoveTaskRequest::set_passwd(const ::std::string& value) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RemoveTaskRequest.Passwd)
}
#if LANG_CXX11
inline void RemoveTaskRequest::set_passwd(::std::string&& value) {
  set_has_passwd();
  passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RemoveTaskRequest.Passwd)
}
#endif
inline void RemoveTaskRequest::set_passwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RemoveTaskRequest.Passwd)
}
inline void RemoveTaskRequest::set_passwd(const char* value, size_t size) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RemoveTaskRequest.Passwd)
}
inline ::std::string* RemoveTaskRequest::mutable_passwd() {
  set_has_passwd();
  // @@protoc_insertion_point(field_mutable:RemoveTaskRequest.Passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveTaskRequest::release_passwd() {
  // @@protoc_insertion_point(field_release:RemoveTaskRequest.Passwd)
  clear_has_passwd();
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveTaskRequest::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    set_has_passwd();
  } else {
    clear_has_passwd();
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:RemoveTaskRequest.Passwd)
}

// -------------------------------------------------------------------

// RemoveTaskResponse

// required int32 ErrCode = 1;
inline bool RemoveTaskResponse::has_errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveTaskResponse::set_has_errcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveTaskResponse::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveTaskResponse::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 RemoveTaskResponse::errcode() const {
  // @@protoc_insertion_point(field_get:RemoveTaskResponse.ErrCode)
  return errcode_;
}
inline void RemoveTaskResponse::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:RemoveTaskResponse.ErrCode)
}

// required string ErrMsg = 2;
inline bool RemoveTaskResponse::has_errmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveTaskResponse::set_has_errmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveTaskResponse::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveTaskResponse::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errmsg();
}
inline const ::std::string& RemoveTaskResponse::errmsg() const {
  // @@protoc_insertion_point(field_get:RemoveTaskResponse.ErrMsg)
  return errmsg_.GetNoArena();
}
inline void RemoveTaskResponse::set_errmsg(const ::std::string& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RemoveTaskResponse.ErrMsg)
}
#if LANG_CXX11
inline void RemoveTaskResponse::set_errmsg(::std::string&& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RemoveTaskResponse.ErrMsg)
}
#endif
inline void RemoveTaskResponse::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RemoveTaskResponse.ErrMsg)
}
inline void RemoveTaskResponse::set_errmsg(const char* value, size_t size) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RemoveTaskResponse.ErrMsg)
}
inline ::std::string* RemoveTaskResponse::mutable_errmsg() {
  set_has_errmsg();
  // @@protoc_insertion_point(field_mutable:RemoveTaskResponse.ErrMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveTaskResponse::release_errmsg() {
  // @@protoc_insertion_point(field_release:RemoveTaskResponse.ErrMsg)
  clear_has_errmsg();
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveTaskResponse::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    set_has_errmsg();
  } else {
    clear_has_errmsg();
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:RemoveTaskResponse.ErrMsg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_meta_2eproto__INCLUDED
